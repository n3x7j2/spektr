/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { AxiosHttpRequest } from './core/AxiosHttpRequest';

import { AssignBomService } from './services/AssignBomService';
import { AutomationService } from './services/AutomationService';
import { BomService } from './services/BomService';
import { BomDataImportStagingService } from './services/BomDataImportStagingService';
import { BomInventoryItemsUsageService } from './services/BomInventoryItemsUsageService';
import { BryntumSmsSchedulerService } from './services/BryntumSmsSchedulerService';
import { BryntumSmsSchedulerTemplateService } from './services/BryntumSmsSchedulerTemplateService';
import { CompanyService } from './services/CompanyService';
import { CompanyBranchService } from './services/CompanyBranchService';
import { CompanyBranchContactService } from './services/CompanyBranchContactService';
import { CountriesStatesProvinceService } from './services/CountriesStatesProvinceService';
import { CountryService } from './services/CountryService';
import { CurrenciesService } from './services/CurrenciesService';
import { DepartmentService } from './services/DepartmentService';
import { DirectiveService } from './services/DirectiveService';
import { DirectiveAssigneeService } from './services/DirectiveAssigneeService';
import { DirectiveAssigneeRoleService } from './services/DirectiveAssigneeRoleService';
import { DirectiveAttachmentService } from './services/DirectiveAttachmentService';
import { DirectiveStatusService } from './services/DirectiveStatusService';
import { DirectiveSubTypeService } from './services/DirectiveSubTypeService';
import { DirectiveTypeService } from './services/DirectiveTypeService';
import { DynamicLookupFieldDataService } from './services/DynamicLookupFieldDataService';
import { EmailTemplateService } from './services/EmailTemplateService';
import { EmployeeService } from './services/EmployeeService';
import { EmployeeStatusService } from './services/EmployeeStatusService';
import { EmployeeTypeService } from './services/EmployeeTypeService';
import { EntityLinkService } from './services/EntityLinkService';
import { ErpApplicationConfigurationService } from './services/ErpApplicationConfigurationService';
import { EstimatingService } from './services/EstimatingService';
import { ExportService } from './services/ExportService';
import { FavouriteService } from './services/FavouriteService';
import { FieldDefinitionService } from './services/FieldDefinitionService';
import { FileService } from './services/FileService';
import { GlAccountService } from './services/GlAccountService';
import { HistoryService } from './services/HistoryService';
import { ImportService } from './services/ImportService';
import { InventoryCategoryService } from './services/InventoryCategoryService';
import { InventoryDynamicFieldDefinitionService } from './services/InventoryDynamicFieldDefinitionService';
import { InventoryDynamicFieldGroupDefinitionService } from './services/InventoryDynamicFieldGroupDefinitionService';
import { InventoryItemService } from './services/InventoryItemService';
import { InventoryItemConversionService } from './services/InventoryItemConversionService';
import { InventoryItemConversionTypeService } from './services/InventoryItemConversionTypeService';
import { InventoryItemGroupService } from './services/InventoryItemGroupService';
import { InventoryItemGroupBatchService } from './services/InventoryItemGroupBatchService';
import { InventoryItemLocationService } from './services/InventoryItemLocationService';
import { InventoryItemSubstituteService } from './services/InventoryItemSubstituteService';
import { InventoryItemSupplierService } from './services/InventoryItemSupplierService';
import { InventoryLocationService } from './services/InventoryLocationService';
import { InventoryOpenService } from './services/InventoryOpenService';
import { InventoryProjectSpecificService } from './services/InventoryProjectSpecificService';
import { InventorySubCategoryService } from './services/InventorySubCategoryService';
import { LanguageTextService } from './services/LanguageTextService';
import { LookupSettingService } from './services/LookupSettingService';
import { ManufacturerService } from './services/ManufacturerService';
import { MaterialService } from './services/MaterialService';
import { MathService } from './services/MathService';
import { NonProductionDirectiveService } from './services/NonProductionDirectiveService';
import { NoteService } from './services/NoteService';
import { OrderAcknowledgementService } from './services/OrderAcknowledgementService';
import { OrderAcknowledgementDrawingSubmittalService } from './services/OrderAcknowledgementDrawingSubmittalService';
import { OrderAcknowledgementMaterialAquisitionLeadTimeService } from './services/OrderAcknowledgementMaterialAquisitionLeadTimeService';
import { OrderAcknowledgementMaterialFabricationAndDeliveryService } from './services/OrderAcknowledgementMaterialFabricationAndDeliveryService';
import { PartTypeCodeService } from './services/PartTypeCodeService';
import { PartTypeCodeCategoryService } from './services/PartTypeCodeCategoryService';
import { PositionService } from './services/PositionService';
import { ProductCategoriesService } from './services/ProductCategoriesService';
import { ProductionCutProcessService } from './services/ProductionCutProcessService';
import { ProductionDirectiveService } from './services/ProductionDirectiveService';
import { ProductionDirectiveTaskService } from './services/ProductionDirectiveTaskService';
import { ProductionDirectiveTaskTypeService } from './services/ProductionDirectiveTaskTypeService';
import { ProductionTaskService } from './services/ProductionTaskService';
import { ProductionTaskTypeService } from './services/ProductionTaskTypeService';
import { ProjectService } from './services/ProjectService';
import { ProjectAllowanceService } from './services/ProjectAllowanceService';
import { ProjectAllowanceTypeService } from './services/ProjectAllowanceTypeService';
import { ProjectCardService } from './services/ProjectCardService';
import { ProjectContactService } from './services/ProjectContactService';
import { ProjectContactPriorityService } from './services/ProjectContactPriorityService';
import { ProjectContactTypeService } from './services/ProjectContactTypeService';
import { ProjectDocumentFileService } from './services/ProjectDocumentFileService';
import { ProjectDocumentStatusService } from './services/ProjectDocumentStatusService';
import { ProjectDocumentTypeService } from './services/ProjectDocumentTypeService';
import { ProjectEstimateService } from './services/ProjectEstimateService';
import { ProjectExtraService } from './services/ProjectExtraService';
import { ProjectExtraReasonCategoryService } from './services/ProjectExtraReasonCategoryService';
import { ProjectExtraStatusService } from './services/ProjectExtraStatusService';
import { ProjectExtraTypeService } from './services/ProjectExtraTypeService';
import { ProjectNavigationService } from './services/ProjectNavigationService';
import { ProjectPhaseService } from './services/ProjectPhaseService';
import { ProjectScheduleService } from './services/ProjectScheduleService';
import { ProjectScheduleTypeService } from './services/ProjectScheduleTypeService';
import { ProjectShippingLocationService } from './services/ProjectShippingLocationService';
import { ProjectStageService } from './services/ProjectStageService';
import { ProjectStatusService } from './services/ProjectStatusService';
import { ProjectStatusUpdateService } from './services/ProjectStatusUpdateService';
import { ProjectStatusUpdateDrawingSubmittalService } from './services/ProjectStatusUpdateDrawingSubmittalService';
import { ProjectStatusUpdateMaterialAquisitionLeadTimeService } from './services/ProjectStatusUpdateMaterialAquisitionLeadTimeService';
import { ProjectStatusUpdateMaterialFabricationAndDeliveryService } from './services/ProjectStatusUpdateMaterialFabricationAndDeliveryService';
import { ProjectSystemService } from './services/ProjectSystemService';
import { ProjectSystemComponentService } from './services/ProjectSystemComponentService';
import { ProjectTypeService } from './services/ProjectTypeService';
import { ProjectWallTypeCategoryService } from './services/ProjectWallTypeCategoryService';
import { ProjectWallTypeCategoryTypeService } from './services/ProjectWallTypeCategoryTypeService';
import { ProjectWallTypeInformationService } from './services/ProjectWallTypeInformationService';
import { PurchaseOrderService } from './services/PurchaseOrderService';
import { PurchaseOrderInvoiceService } from './services/PurchaseOrderInvoiceService';
import { PurchaseOrderPriorityService } from './services/PurchaseOrderPriorityService';
import { PurchaseOrderStatusService } from './services/PurchaseOrderStatusService';
import { PurchaseOrderTermService } from './services/PurchaseOrderTermService';
import { PurchaseOrderTypeService } from './services/PurchaseOrderTypeService';
import { PurchaseRequestService } from './services/PurchaseRequestService';
import { PurchaseRequestStatusService } from './services/PurchaseRequestStatusService';
import { PurchaseRequestTypeService } from './services/PurchaseRequestTypeService';
import { PurchaseRequestWillNotOrderItemService } from './services/PurchaseRequestWillNotOrderItemService';
import { ReCaptchaSettingsService } from './services/ReCaptchaSettingsService';
import { RfiService } from './services/RfiService';
import { ScopeCardService } from './services/ScopeCardService';
import { ScopeCardConfigService } from './services/ScopeCardConfigService';
import { ServiceTaskService } from './services/ServiceTaskService';
import { ServiceTaskProductionDirectiveService } from './services/ServiceTaskProductionDirectiveService';
import { ServiceTaskStatusService } from './services/ServiceTaskStatusService';
import { ServiceTypeService } from './services/ServiceTypeService';
import { ShippingCarrierService } from './services/ShippingCarrierService';
import { ShippingCarrierTypeService } from './services/ShippingCarrierTypeService';
import { SpektrErpSecurityLogService } from './services/SpektrErpSecurityLogService';
import { SubmittalService } from './services/SubmittalService';
import { SubmittalDocumentService } from './services/SubmittalDocumentService';
import { SubmittalPurposeService } from './services/SubmittalPurposeService';
import { SubmittalStatusService } from './services/SubmittalStatusService';
import { SubmittalTypeService } from './services/SubmittalTypeService';
import { SupplierService } from './services/SupplierService';
import { SupplierContactService } from './services/SupplierContactService';
import { SupplierLocationService } from './services/SupplierLocationService';
import { SystemService } from './services/SystemService';
import { SystemAttributeService } from './services/SystemAttributeService';
import { SystemRichContentDataService } from './services/SystemRichContentDataService';
import { SystemTypeService } from './services/SystemTypeService';
import { TeamService } from './services/TeamService';
import { TemplateService } from './services/TemplateService';
import { TimesheetService } from './services/TimesheetService';
import { TimesheetTaskTypeService } from './services/TimesheetTaskTypeService';
import { TransmittalService } from './services/TransmittalService';
import { TransmittalMediumService } from './services/TransmittalMediumService';
import { UnitOfMeasureService } from './services/UnitOfMeasureService';
import { UnitOfMeasureConversionService } from './services/UnitOfMeasureConversionService';
import { UserPreferenceService } from './services/UserPreferenceService';

type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;

export class RestClient {

  public readonly assignBom: AssignBomService;
  public readonly automation: AutomationService;
  public readonly bom: BomService;
  public readonly bomDataImportStaging: BomDataImportStagingService;
  public readonly bomInventoryItemsUsage: BomInventoryItemsUsageService;
  public readonly bryntumSmsScheduler: BryntumSmsSchedulerService;
  public readonly bryntumSmsSchedulerTemplate: BryntumSmsSchedulerTemplateService;
  public readonly company: CompanyService;
  public readonly companyBranch: CompanyBranchService;
  public readonly companyBranchContact: CompanyBranchContactService;
  public readonly countriesStatesProvince: CountriesStatesProvinceService;
  public readonly country: CountryService;
  public readonly currencies: CurrenciesService;
  public readonly department: DepartmentService;
  public readonly directive: DirectiveService;
  public readonly directiveAssignee: DirectiveAssigneeService;
  public readonly directiveAssigneeRole: DirectiveAssigneeRoleService;
  public readonly directiveAttachment: DirectiveAttachmentService;
  public readonly directiveStatus: DirectiveStatusService;
  public readonly directiveSubType: DirectiveSubTypeService;
  public readonly directiveType: DirectiveTypeService;
  public readonly dynamicLookupFieldData: DynamicLookupFieldDataService;
  public readonly emailTemplate: EmailTemplateService;
  public readonly employee: EmployeeService;
  public readonly employeeStatus: EmployeeStatusService;
  public readonly employeeType: EmployeeTypeService;
  public readonly entityLink: EntityLinkService;
  public readonly erpApplicationConfiguration: ErpApplicationConfigurationService;
  public readonly estimating: EstimatingService;
  public readonly export: ExportService;
  public readonly favourite: FavouriteService;
  public readonly fieldDefinition: FieldDefinitionService;
  public readonly file: FileService;
  public readonly glAccount: GlAccountService;
  public readonly history: HistoryService;
  public readonly import: ImportService;
  public readonly inventoryCategory: InventoryCategoryService;
  public readonly inventoryDynamicFieldDefinition: InventoryDynamicFieldDefinitionService;
  public readonly inventoryDynamicFieldGroupDefinition: InventoryDynamicFieldGroupDefinitionService;
  public readonly inventoryItem: InventoryItemService;
  public readonly inventoryItemConversion: InventoryItemConversionService;
  public readonly inventoryItemConversionType: InventoryItemConversionTypeService;
  public readonly inventoryItemGroup: InventoryItemGroupService;
  public readonly inventoryItemGroupBatch: InventoryItemGroupBatchService;
  public readonly inventoryItemLocation: InventoryItemLocationService;
  public readonly inventoryItemSubstitute: InventoryItemSubstituteService;
  public readonly inventoryItemSupplier: InventoryItemSupplierService;
  public readonly inventoryLocation: InventoryLocationService;
  public readonly inventoryOpen: InventoryOpenService;
  public readonly inventoryProjectSpecific: InventoryProjectSpecificService;
  public readonly inventorySubCategory: InventorySubCategoryService;
  public readonly languageText: LanguageTextService;
  public readonly lookupSetting: LookupSettingService;
  public readonly manufacturer: ManufacturerService;
  public readonly material: MaterialService;
  public readonly math: MathService;
  public readonly nonProductionDirective: NonProductionDirectiveService;
  public readonly note: NoteService;
  public readonly orderAcknowledgement: OrderAcknowledgementService;
  public readonly orderAcknowledgementDrawingSubmittal: OrderAcknowledgementDrawingSubmittalService;
  public readonly orderAcknowledgementMaterialAquisitionLeadTime: OrderAcknowledgementMaterialAquisitionLeadTimeService;
  public readonly orderAcknowledgementMaterialFabricationAndDelivery: OrderAcknowledgementMaterialFabricationAndDeliveryService;
  public readonly partTypeCode: PartTypeCodeService;
  public readonly partTypeCodeCategory: PartTypeCodeCategoryService;
  public readonly position: PositionService;
  public readonly productCategories: ProductCategoriesService;
  public readonly productionCutProcess: ProductionCutProcessService;
  public readonly productionDirective: ProductionDirectiveService;
  public readonly productionDirectiveTask: ProductionDirectiveTaskService;
  public readonly productionDirectiveTaskType: ProductionDirectiveTaskTypeService;
  public readonly productionTask: ProductionTaskService;
  public readonly productionTaskType: ProductionTaskTypeService;
  public readonly project: ProjectService;
  public readonly projectAllowance: ProjectAllowanceService;
  public readonly projectAllowanceType: ProjectAllowanceTypeService;
  public readonly projectCard: ProjectCardService;
  public readonly projectContact: ProjectContactService;
  public readonly projectContactPriority: ProjectContactPriorityService;
  public readonly projectContactType: ProjectContactTypeService;
  public readonly projectDocumentFile: ProjectDocumentFileService;
  public readonly projectDocumentStatus: ProjectDocumentStatusService;
  public readonly projectDocumentType: ProjectDocumentTypeService;
  public readonly projectEstimate: ProjectEstimateService;
  public readonly projectExtra: ProjectExtraService;
  public readonly projectExtraReasonCategory: ProjectExtraReasonCategoryService;
  public readonly projectExtraStatus: ProjectExtraStatusService;
  public readonly projectExtraType: ProjectExtraTypeService;
  public readonly projectNavigation: ProjectNavigationService;
  public readonly projectPhase: ProjectPhaseService;
  public readonly projectSchedule: ProjectScheduleService;
  public readonly projectScheduleType: ProjectScheduleTypeService;
  public readonly projectShippingLocation: ProjectShippingLocationService;
  public readonly projectStage: ProjectStageService;
  public readonly projectStatus: ProjectStatusService;
  public readonly projectStatusUpdate: ProjectStatusUpdateService;
  public readonly projectStatusUpdateDrawingSubmittal: ProjectStatusUpdateDrawingSubmittalService;
  public readonly projectStatusUpdateMaterialAquisitionLeadTime: ProjectStatusUpdateMaterialAquisitionLeadTimeService;
  public readonly projectStatusUpdateMaterialFabricationAndDelivery: ProjectStatusUpdateMaterialFabricationAndDeliveryService;
  public readonly projectSystem: ProjectSystemService;
  public readonly projectSystemComponent: ProjectSystemComponentService;
  public readonly projectType: ProjectTypeService;
  public readonly projectWallTypeCategory: ProjectWallTypeCategoryService;
  public readonly projectWallTypeCategoryType: ProjectWallTypeCategoryTypeService;
  public readonly projectWallTypeInformation: ProjectWallTypeInformationService;
  public readonly purchaseOrder: PurchaseOrderService;
  public readonly purchaseOrderInvoice: PurchaseOrderInvoiceService;
  public readonly purchaseOrderPriority: PurchaseOrderPriorityService;
  public readonly purchaseOrderStatus: PurchaseOrderStatusService;
  public readonly purchaseOrderTerm: PurchaseOrderTermService;
  public readonly purchaseOrderType: PurchaseOrderTypeService;
  public readonly purchaseRequest: PurchaseRequestService;
  public readonly purchaseRequestStatus: PurchaseRequestStatusService;
  public readonly purchaseRequestType: PurchaseRequestTypeService;
  public readonly purchaseRequestWillNotOrderItem: PurchaseRequestWillNotOrderItemService;
  public readonly reCaptchaSettings: ReCaptchaSettingsService;
  public readonly rfi: RfiService;
  public readonly scopeCard: ScopeCardService;
  public readonly scopeCardConfig: ScopeCardConfigService;
  public readonly serviceTask: ServiceTaskService;
  public readonly serviceTaskProductionDirective: ServiceTaskProductionDirectiveService;
  public readonly serviceTaskStatus: ServiceTaskStatusService;
  public readonly serviceType: ServiceTypeService;
  public readonly shippingCarrier: ShippingCarrierService;
  public readonly shippingCarrierType: ShippingCarrierTypeService;
  public readonly spektrErpSecurityLog: SpektrErpSecurityLogService;
  public readonly submittal: SubmittalService;
  public readonly submittalDocument: SubmittalDocumentService;
  public readonly submittalPurpose: SubmittalPurposeService;
  public readonly submittalStatus: SubmittalStatusService;
  public readonly submittalType: SubmittalTypeService;
  public readonly supplier: SupplierService;
  public readonly supplierContact: SupplierContactService;
  public readonly supplierLocation: SupplierLocationService;
  public readonly system: SystemService;
  public readonly systemAttribute: SystemAttributeService;
  public readonly systemRichContentData: SystemRichContentDataService;
  public readonly systemType: SystemTypeService;
  public readonly team: TeamService;
  public readonly template: TemplateService;
  public readonly timesheet: TimesheetService;
  public readonly timesheetTaskType: TimesheetTaskTypeService;
  public readonly transmittal: TransmittalService;
  public readonly transmittalMedium: TransmittalMediumService;
  public readonly unitOfMeasure: UnitOfMeasureService;
  public readonly unitOfMeasureConversion: UnitOfMeasureConversionService;
  public readonly userPreference: UserPreferenceService;

  public readonly request: BaseHttpRequest;

  constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {
    this.request = new HttpRequest({
      BASE: config?.BASE ?? '',
      VERSION: config?.VERSION ?? '1',
      WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,
      CREDENTIALS: config?.CREDENTIALS ?? 'include',
      TOKEN: config?.TOKEN,
      USERNAME: config?.USERNAME,
      PASSWORD: config?.PASSWORD,
      HEADERS: config?.HEADERS,
      ENCODE_PATH: config?.ENCODE_PATH,
    });

    this.assignBom = new AssignBomService(this.request);
    this.automation = new AutomationService(this.request);
    this.bom = new BomService(this.request);
    this.bomDataImportStaging = new BomDataImportStagingService(this.request);
    this.bomInventoryItemsUsage = new BomInventoryItemsUsageService(this.request);
    this.bryntumSmsScheduler = new BryntumSmsSchedulerService(this.request);
    this.bryntumSmsSchedulerTemplate = new BryntumSmsSchedulerTemplateService(this.request);
    this.company = new CompanyService(this.request);
    this.companyBranch = new CompanyBranchService(this.request);
    this.companyBranchContact = new CompanyBranchContactService(this.request);
    this.countriesStatesProvince = new CountriesStatesProvinceService(this.request);
    this.country = new CountryService(this.request);
    this.currencies = new CurrenciesService(this.request);
    this.department = new DepartmentService(this.request);
    this.directive = new DirectiveService(this.request);
    this.directiveAssignee = new DirectiveAssigneeService(this.request);
    this.directiveAssigneeRole = new DirectiveAssigneeRoleService(this.request);
    this.directiveAttachment = new DirectiveAttachmentService(this.request);
    this.directiveStatus = new DirectiveStatusService(this.request);
    this.directiveSubType = new DirectiveSubTypeService(this.request);
    this.directiveType = new DirectiveTypeService(this.request);
    this.dynamicLookupFieldData = new DynamicLookupFieldDataService(this.request);
    this.emailTemplate = new EmailTemplateService(this.request);
    this.employee = new EmployeeService(this.request);
    this.employeeStatus = new EmployeeStatusService(this.request);
    this.employeeType = new EmployeeTypeService(this.request);
    this.entityLink = new EntityLinkService(this.request);
    this.erpApplicationConfiguration = new ErpApplicationConfigurationService(this.request);
    this.estimating = new EstimatingService(this.request);
    this.export = new ExportService(this.request);
    this.favourite = new FavouriteService(this.request);
    this.fieldDefinition = new FieldDefinitionService(this.request);
    this.file = new FileService(this.request);
    this.glAccount = new GlAccountService(this.request);
    this.history = new HistoryService(this.request);
    this.import = new ImportService(this.request);
    this.inventoryCategory = new InventoryCategoryService(this.request);
    this.inventoryDynamicFieldDefinition = new InventoryDynamicFieldDefinitionService(this.request);
    this.inventoryDynamicFieldGroupDefinition = new InventoryDynamicFieldGroupDefinitionService(this.request);
    this.inventoryItem = new InventoryItemService(this.request);
    this.inventoryItemConversion = new InventoryItemConversionService(this.request);
    this.inventoryItemConversionType = new InventoryItemConversionTypeService(this.request);
    this.inventoryItemGroup = new InventoryItemGroupService(this.request);
    this.inventoryItemGroupBatch = new InventoryItemGroupBatchService(this.request);
    this.inventoryItemLocation = new InventoryItemLocationService(this.request);
    this.inventoryItemSubstitute = new InventoryItemSubstituteService(this.request);
    this.inventoryItemSupplier = new InventoryItemSupplierService(this.request);
    this.inventoryLocation = new InventoryLocationService(this.request);
    this.inventoryOpen = new InventoryOpenService(this.request);
    this.inventoryProjectSpecific = new InventoryProjectSpecificService(this.request);
    this.inventorySubCategory = new InventorySubCategoryService(this.request);
    this.languageText = new LanguageTextService(this.request);
    this.lookupSetting = new LookupSettingService(this.request);
    this.manufacturer = new ManufacturerService(this.request);
    this.material = new MaterialService(this.request);
    this.math = new MathService(this.request);
    this.nonProductionDirective = new NonProductionDirectiveService(this.request);
    this.note = new NoteService(this.request);
    this.orderAcknowledgement = new OrderAcknowledgementService(this.request);
    this.orderAcknowledgementDrawingSubmittal = new OrderAcknowledgementDrawingSubmittalService(this.request);
    this.orderAcknowledgementMaterialAquisitionLeadTime = new OrderAcknowledgementMaterialAquisitionLeadTimeService(this.request);
    this.orderAcknowledgementMaterialFabricationAndDelivery = new OrderAcknowledgementMaterialFabricationAndDeliveryService(this.request);
    this.partTypeCode = new PartTypeCodeService(this.request);
    this.partTypeCodeCategory = new PartTypeCodeCategoryService(this.request);
    this.position = new PositionService(this.request);
    this.productCategories = new ProductCategoriesService(this.request);
    this.productionCutProcess = new ProductionCutProcessService(this.request);
    this.productionDirective = new ProductionDirectiveService(this.request);
    this.productionDirectiveTask = new ProductionDirectiveTaskService(this.request);
    this.productionDirectiveTaskType = new ProductionDirectiveTaskTypeService(this.request);
    this.productionTask = new ProductionTaskService(this.request);
    this.productionTaskType = new ProductionTaskTypeService(this.request);
    this.project = new ProjectService(this.request);
    this.projectAllowance = new ProjectAllowanceService(this.request);
    this.projectAllowanceType = new ProjectAllowanceTypeService(this.request);
    this.projectCard = new ProjectCardService(this.request);
    this.projectContact = new ProjectContactService(this.request);
    this.projectContactPriority = new ProjectContactPriorityService(this.request);
    this.projectContactType = new ProjectContactTypeService(this.request);
    this.projectDocumentFile = new ProjectDocumentFileService(this.request);
    this.projectDocumentStatus = new ProjectDocumentStatusService(this.request);
    this.projectDocumentType = new ProjectDocumentTypeService(this.request);
    this.projectEstimate = new ProjectEstimateService(this.request);
    this.projectExtra = new ProjectExtraService(this.request);
    this.projectExtraReasonCategory = new ProjectExtraReasonCategoryService(this.request);
    this.projectExtraStatus = new ProjectExtraStatusService(this.request);
    this.projectExtraType = new ProjectExtraTypeService(this.request);
    this.projectNavigation = new ProjectNavigationService(this.request);
    this.projectPhase = new ProjectPhaseService(this.request);
    this.projectSchedule = new ProjectScheduleService(this.request);
    this.projectScheduleType = new ProjectScheduleTypeService(this.request);
    this.projectShippingLocation = new ProjectShippingLocationService(this.request);
    this.projectStage = new ProjectStageService(this.request);
    this.projectStatus = new ProjectStatusService(this.request);
    this.projectStatusUpdate = new ProjectStatusUpdateService(this.request);
    this.projectStatusUpdateDrawingSubmittal = new ProjectStatusUpdateDrawingSubmittalService(this.request);
    this.projectStatusUpdateMaterialAquisitionLeadTime = new ProjectStatusUpdateMaterialAquisitionLeadTimeService(this.request);
    this.projectStatusUpdateMaterialFabricationAndDelivery = new ProjectStatusUpdateMaterialFabricationAndDeliveryService(this.request);
    this.projectSystem = new ProjectSystemService(this.request);
    this.projectSystemComponent = new ProjectSystemComponentService(this.request);
    this.projectType = new ProjectTypeService(this.request);
    this.projectWallTypeCategory = new ProjectWallTypeCategoryService(this.request);
    this.projectWallTypeCategoryType = new ProjectWallTypeCategoryTypeService(this.request);
    this.projectWallTypeInformation = new ProjectWallTypeInformationService(this.request);
    this.purchaseOrder = new PurchaseOrderService(this.request);
    this.purchaseOrderInvoice = new PurchaseOrderInvoiceService(this.request);
    this.purchaseOrderPriority = new PurchaseOrderPriorityService(this.request);
    this.purchaseOrderStatus = new PurchaseOrderStatusService(this.request);
    this.purchaseOrderTerm = new PurchaseOrderTermService(this.request);
    this.purchaseOrderType = new PurchaseOrderTypeService(this.request);
    this.purchaseRequest = new PurchaseRequestService(this.request);
    this.purchaseRequestStatus = new PurchaseRequestStatusService(this.request);
    this.purchaseRequestType = new PurchaseRequestTypeService(this.request);
    this.purchaseRequestWillNotOrderItem = new PurchaseRequestWillNotOrderItemService(this.request);
    this.reCaptchaSettings = new ReCaptchaSettingsService(this.request);
    this.rfi = new RfiService(this.request);
    this.scopeCard = new ScopeCardService(this.request);
    this.scopeCardConfig = new ScopeCardConfigService(this.request);
    this.serviceTask = new ServiceTaskService(this.request);
    this.serviceTaskProductionDirective = new ServiceTaskProductionDirectiveService(this.request);
    this.serviceTaskStatus = new ServiceTaskStatusService(this.request);
    this.serviceType = new ServiceTypeService(this.request);
    this.shippingCarrier = new ShippingCarrierService(this.request);
    this.shippingCarrierType = new ShippingCarrierTypeService(this.request);
    this.spektrErpSecurityLog = new SpektrErpSecurityLogService(this.request);
    this.submittal = new SubmittalService(this.request);
    this.submittalDocument = new SubmittalDocumentService(this.request);
    this.submittalPurpose = new SubmittalPurposeService(this.request);
    this.submittalStatus = new SubmittalStatusService(this.request);
    this.submittalType = new SubmittalTypeService(this.request);
    this.supplier = new SupplierService(this.request);
    this.supplierContact = new SupplierContactService(this.request);
    this.supplierLocation = new SupplierLocationService(this.request);
    this.system = new SystemService(this.request);
    this.systemAttribute = new SystemAttributeService(this.request);
    this.systemRichContentData = new SystemRichContentDataService(this.request);
    this.systemType = new SystemTypeService(this.request);
    this.team = new TeamService(this.request);
    this.template = new TemplateService(this.request);
    this.timesheet = new TimesheetService(this.request);
    this.timesheetTaskType = new TimesheetTaskTypeService(this.request);
    this.transmittal = new TransmittalService(this.request);
    this.transmittalMedium = new TransmittalMediumService(this.request);
    this.unitOfMeasure = new UnitOfMeasureService(this.request);
    this.unitOfMeasureConversion = new UnitOfMeasureConversionService(this.request);
    this.userPreference = new UserPreferenceService(this.request);
  }
}
